name: Publish (PyPI)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: publish-pypi-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build distribution
        run: |
          uv build

      - name: Verify tag matches pyproject version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          PYPROJECT_VERSION=$(grep -E '^[[:space:]]*version[[:space:]]*=' -m1 pyproject.toml | sed -E 's/.*"([^"]+)".*/\1/')
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          echo "pyproject version: $PYPROJECT_VERSION"
          echo "tag version: $TAG_VERSION"
          if [ "$PYPROJECT_VERSION" != "$TAG_VERSION" ]; then
            echo "Version mismatch: pyproject.toml ($PYPROJECT_VERSION) != tag ($TAG_VERSION)"
            exit 1
          fi

      - name: Ensure version not on PyPI
        run: |
          PKG_NAME=datarobot-genai
          VERSION=$(grep -E '^[[:space:]]*version[[:space:]]*=' -m1 pyproject.toml | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Version to release: $VERSION"
          if curl -fsSL "https://pypi.org/pypi/${PKG_NAME}/json" | jq -e --arg v "$VERSION" '.releases | has($v)' >/dev/null; then
            echo "Version $VERSION already exists on PyPI"
            exit 1
          fi

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
          skip-existing: false
